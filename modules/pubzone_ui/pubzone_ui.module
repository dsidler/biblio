<?php
/**
 * @file
 * Main functionality file for the pubzone UI module.
 */

/**
 * Implements hook_menu().
 */
function pubzone_ui_menu() {
  $items = array();

  $items['publications'] = array(
    'title' => 'Publications',
    'page callback' => 'pubzone_ui_mainpage',
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
  );

  $items['author/%/%'] = array(
    'title' => 'Publications',
    'page callback' => 'pubzone_ui_mainpage',
    'page arguments' => array(1,2),
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
  );

  $items['publication/%'] = array(
    'title' => 'Publication',
    'page callback' => 'pubzone_ui_singlepage',
    'page arguments' => array(1),
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
  );

  return $items;
}

function pubzone_header_form($form_state) {
  $form = array();

  //Get biblio categories
  $voc = taxonomy_vocabulary_machine_name_load('biblio_categories');
  $terms = entity_load('taxonomy_term', FALSE, array('vid' => $voc->vid));
  $categories = array('all' => '- Any -');
  foreach ($terms as $term) {
    $categories[$term->name] = $term->name; //maybe use $term->tid as key
  }

  //Get types
  $biblio_types = biblio_get_types_info();
  $types = array('all' => '- Any -');
  foreach($biblio_types as $btype) {
    $types[$btype['name']] = $btype['name'];
  }

  $form['search'] = array(
    '#type' => 'textfield',
    '#title' => t('Search'),
    '#size' => 30,
    '#maxlength' => 128,

  );

  $form['year'] = array(
    '#type' => 'textfield',
    '#title' => t('Year'),
    '#size' => 30,
    '#maxlength' => 128,
  );

  $form['categories'] = array(
    //'#type' => 'checkboxes',
    '#type' => 'select',
    '#title' => t('Category'),
    '#options' => $categories,
    '#default_value' => $categories['all'],
  );

  $form['types'] = array(
    //'#type' => 'checkboxes',
    '#type' => 'select',
    '#title' => t('Type'),
    '#options' => $types,
    '#default_value' => $types['all'],
  );

  return $form;
}


/*
 * Main page
 */
function pubzone_ui_mainpage($aid=null, $author=null) {
  $biblio_style = 'pubzone';
  if ($author) {
    drupal_set_title('Publications by '.$author);
    //TODO add return button
  }

  $content = '';

  /* this is done by the JS now
  $form = drupal_get_form('pubzone_header_form');
  $content .='<section id="pubzone-header">';
  $content .= drupal_render($form);
  $content .='</section>';*/
  
  //Get biblios.
  $content .= '<section id="pubzone-biblios">';
  if ($aid) {
    $content .= '<div class="pub-export">';
    $content .= '<div><a href="#" onClick="exportBibtex()">Export bibtex</a></div>';
    $content .= '<div><a href="/publications">All Publications</a></div></div>';
    $biblios = pubzone_ui_get_author_biblios($aid);
  } else {
    $biblios = pubzone_ui_get_biblios();
  }

  $previous_year = 0;

  global $user;
  foreach ($biblios as $bid) {
    $biblio = biblio_load($bid);
    $current_year = $biblio->biblio_year['und'][0]['value'];

    if ($current_year != $previous_year) {
      $content .= '<h3>' . $current_year . '</h3>';
    }
    
    $content .= $biblio->getText($biblio_style);
    if (is_array($user->roles) && in_array('authenticated user', array_values($user->roles))) {
      $meta_links = l('edit', 'biblio/'.$bid.'/edit');
      if (is_array($user->roles) && in_array('editor', array_values($user->roles))) {
        $meta_links .= l('delete', 'biblio/'.$bid.'/delete');
      }
      $content .= '<div class="pub-meta">'.$meta_links.'</div>';
    }

    // NOTE: getText does NOT close the <div> it creates, so it must be closed here! This is to accommodate the pub-meta div above, and should be refactored
    $content .= '</div>';

    $previous_year = $current_year;
  }
  $content .= '</section>';
  
  $no_results = '<div id="no-matches" style="display: none;">No publications found.</div>';

  return $no_results . $content;
}

function pubzone_ui_get_biblios() {
  $query = new EntityFieldQuery;
  $query->entityCondition('entity_type', 'biblio');
  $query->fieldOrderBy('biblio_year', 'value', 'DESC');
  $query->fieldOrderBy('biblio_month', 'value', 'DESC');
  // page doesnt load without caching unless we do this
  //$query->range(500, 700);

  $results = $query->execute();
  if (isset($results['biblio'])) {
    return array_keys($results['biblio']);
  }

  return array();
}

function pubzone_ui_get_author_biblios($aid) {
  $inner = new EntityFieldQuery;
  $inner->entityCondition('entity_type', 'field_collection_item');
  $inner->fieldCondition('biblio_contributor', 'target_id', $aid);

  $inner_res = $inner->execute();
  if (isset($inner_res['field_collection_item'])) {
    $keys = array_keys($inner_res['field_collection_item']);
    $query = new EntityFieldQuery();
    $query->entityCondition('entity_type', 'biblio');
    $query->fieldCondition('contributor_field_collection', 'value', $keys);
    $query->fieldOrderBy('biblio_year', 'value', 'DESC');
    $query->fieldOrderBy('biblio_month', 'value', 'DESC');
    // TODO order by ID as well to ensure determinism?

    $results = $query->execute();
    if (isset($results['biblio'])) {
      return array_keys($results['biblio']);
    } 
  }
  return array();
}


function pubzone_ui_singlepage($bid) {
  $biblio_style = 'pubzone';
  
  if (!$bid) {
    return l('Invalid publication id.');
  }
  $content = '<div class="pub-export"><div><a href="/publications">All Publications</a></div></div>';

  global $user;
  $biblio = biblio_load($bid);
  $content .= $biblio->getText($biblio_style);
  if (is_array($user->roles) && in_array('authenticated user', array_values($user->roles))) {
    $meta_links = l('edit', 'biblio/'.$bid.'/edit');
    if (is_array($user->roles) && in_array('editor', array_values($user->roles))) {
      $meta_links .= l('delete', 'biblio/'.$bid.'/delete');
    }
    $content .= '<div class="pub-meta">'.$meta_links.'</div>';
  }

  // NOTE: getText does NOT close the <div> it creates, so it must be closed here! This is to accommodate the pub-meta div above, and should be refactored
  $content .= '</div>';

  return $content;
}

